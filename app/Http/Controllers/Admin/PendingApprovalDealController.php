<?php

namespace App\Http\Controllers\Admin;

use App\Models\DealModel;
use App\Models\LeadModel;
use App\Models\IdStoreModel;
use Illuminate\Http\Request;
use App\Http\Controllers\Controller;
use App\Models\LeadDisapproveReason;

class PendingApprovalDealController extends Controller
{
	use AutoGeneratedController;
	/**
	 * Display a listing of the resource.
	 *
	 * @return \Illuminate\Http\Response
	 */
	public function index()
	{
		$deals = LeadModel::where('active', true)
												->where('post_followup_status', 20)
												->paginate(10);

		return view('crm.deals.pending.index', compact('deals'));
	}

	/**
	 * Display the specified resource.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function show($id)
	{
		$otherLeads = LeadModel::where('id', '!=', $id)
															->where('active', true)
															->where('post_followup_status', 20)
															->orderBy('business_name')->get();

		$data = LeadModel::findOrFail($id);

		return view('crm.deals.pending.view', compact('data', 'otherLeads'));
	}

	/**
	 * Update the specified resource in storage.
	 *
	 * @param  \Illuminate\Http\Request  $request
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function update(Request $request, $id)
	{
		$leadData = LeadModel::findOrFail($id);

		if ($request->status==0){
			if ($request->finalStatus==22) {
				$leadData->active = 0;
				$leadData->lead_status = 18;
			} else {
				$leadData->active = 1;
				$leadData->lead_status = 16;
			}
			$leadData->post_followup_status = $request->finalStatus;
			$leadData->save();

			$reason = new LeadDisapproveReason;
			$reason->lead_id = $id;
			$reason->final_status = $request->finalStatus;
			if ($request->comments){
				$reason->comments = $request->comments;
			}
			$reason->save();
		}else{
			$leadData->active = 0;
			$leadData->lead_status = 18;
			$leadData->post_followup_status = 20;
			$leadData->save();

			$dealData = new DealModel;
			$dealId = $this->autoId('deal');
			$dealType = 'deal';

			$dealData->deal_id = $dealId;
			$dealData->deal_date = now();
			$dealData->lead_pk = $id;
			$dealData->lead_owner = $leadData->lead_owner;
			$dealData->owner_type = $leadData->owner_type;
			$dealData->business_name = $leadData->business_name;
			$dealData->location = $leadData->location;
			$dealData->contact_person = $leadData->contact_person;
			$dealData->job_title = $leadData->job_title;
			$dealData->contact_no = $leadData->contact_no;
			$dealData->whatsapp_no = $leadData->whatsapp_no;
			$dealData->email = $leadData->email;
			$dealData->lead_source = $leadData->lead_source;
			$dealData->notes = $leadData->notes;
			$dealData->save();

			$leadCount = IdStoreModel::where('id_type', 'deal')->count();
			if ($leadCount==0){
				IdStoreModel::insert([
					'last_id' => $dealId,
					'id_num' => 1,
					'id_type' => $dealType,
					'created_at' => now(),
				]);
			}else{
				$curr_num = IdStoreModel::select('id_num')->where('id_type', 'deal')->first();
				$new_num = $curr_num->id_num + 1;

				IdStoreModel::where('id_type', 'deal')->update([
					'last_id' => $dealId,
					'id_num' => $new_num,
					'id_type' => $dealType,
					'updated_at' => now(),
				]);
			}
		}
	}

	/**
	 * Remove the specified resource from storage.
	 *
	 * @param  int  $id
	 * @return \Illuminate\Http\Response
	 */
	public function destroy($id)
	{
		//
	}
}
